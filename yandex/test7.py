# 7. Программист на пляже
# Решена
# Лёгкая
# Однажды программист Алексей из Яндекса взял отпуск и уехал отдыхать на море. Там в один из дней он пошёл на пляж, причём пошёл туда не один. Возможно, он пошёл туда с мамой, возможно, с бабушкой, а, возможно, с другом или подругой. Важно, что пошёл он туда не один.
#
# На пляже программист Алексей обнаружил, что осталось всего
# n
# n (
# 2
# ≤
# n
# ≤
# 1
# 0
# 6
# 2≤n≤10
# 6
#  ) свободных лежаков. Но среди всего этого множества лежаков программисту Алексею нужно было всего лишь 2: для него самого и для того (или той), с кем он пришёл. Так как программист Алексей очень любил порядок, то он хотел, чтобы лежаки были как можно более похожи друг на друга. Похожесть лежаков можно вычислить следующим образом:
#
# Каждому лежаку каким-то образом по его внешним признакам назначается некоторое число
# a
# i
# a
# i
# ​
#   (
# 1
# ≤
# i
# ≤
# n
# 1≤i≤n,
# 0
# ≤
# a
# i
# ≤
# 1
# 0
# 9
# 0≤a
# i
# ​
#  ≤10
# 9
#  ).
#
# Затем непохожесть двух лежаков вычисляется как XOR (побитовое исключающее ИЛИ) чисел назначенных этим лежакам. Чем значение непохожести меньше, тем более похожи лежаки.
#
# Помогите программисту Алексею понять, какого минимального значения непохожести лежаков он может достичь, сравнив попарно все свободные лежаки.
#
# Формат ввода
# В первой строке задано число
# T
# T (
# 1
# ≤
# T
# ≤
# 1000
# 1≤T≤1000) — количество тестов. Каждый тест состоит из двух строк.
#
# В первой строке каждого теста задано число
# n
# n (
# 2
# ≤
# n
# ≤
# 1
# 0
# 6
# 2≤n≤10
# 6
#  ) — количество лежаков.
#
# Во второй строке каждого теста заданы
# n
# n чисел
# a
# i
# a
# i
# ​
#   (
# 1
# ≤
# i
# ≤
# n
# 1≤i≤n,
# 0
# ≤
# a
# i
# ≤
# 1
# 0
# 9
# 0≤a
# i
# ​
#  ≤10
# 9
#  ) — значения, которые были поставлены лежакам в соответствие по внешним признакам.
#
# Сумма
# n
# n по всем тестам не превосходит
# 1
# 0
# 6
# 10
# 6
#  .
#
# Формат вывода
# Для каждого теста выведите по одной строке, в которой должно быть единственное число — минимальное значение непохожести.
#
# Примечание
# В первом примере Алексей выберет лежаки со значениями 1 и 2.
#
# В первой части второго примера Алексей может взять только лежаки со значениями 2 и 4. Во второй части он выберет лежаки со значениями 4 и 6.

from itertools import islice


def main():
    """
    Для чтения входных данных необходимо получить их
    из стандартного потока ввода (sys.stdin).
    Данные во входном потоке соответствуют описанному
    в условии формату. Обычно входные данные состоят
    из нескольких строк.
    Можно использовать несколько методов:
    * input() -- читает одну строку из потока без символа
    перевода строки;
    * sys.stdin.readline() -- читает одну строку из потока,
    сохраняя символ перевода строки в конце;
    * sys.stdin.readlines() -- вернет список (list) строк,
    сохраняя символ перевода строки в конце каждой из них.
    Чтобы прочитать из строки стандартного потока:
    * число -- int(input()) # в строке должно быть одно число
    * строку -- input()
    * массив чисел -- map(int, input().split())
    * последовательность слов -- input().split()
    Чтобы вывести результат в стандартный поток вывода (sys.stdout),
    можно использовать функцию print() или sys.stdout.write().
    Возможное решение задачи "Вычислите сумму чисел в строке":
    print(sum(map(int, input().split())))
    """
    count_tests = int(input())
    for __ in range(0, count_tests):
        count_sunbed = int(input())
        sunbeds = sorted(islice(map(int, input().split()), 0, count_sunbed))
        min_value = 4294967295  # pow(10, 9) + 1
        for i in range(len(sunbeds) - 1):
            val = sunbeds[i] ^ sunbeds[i + 1]
            if val < min_value:
                min_value = val
        print(min_value)


if __name__ == "__main__":
    main()
